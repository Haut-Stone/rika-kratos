// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"helloworld/internal/biz"
	"helloworld/internal/conf"
	"helloworld/internal/data"
	"helloworld/internal/server"
	"helloworld/internal/service"

	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(confServer *conf.Server, confData *conf.Data, logger log.Logger) (*kratos.App, func(), error) {
	dataData, cleanup, err := data.NewData(confData, logger) // 数据库链接
	if err != nil {
		return nil, nil, err
	}
	greeterRepo := data.NewGreeterRepo(dataData, logger)                   // greeter 的数据处理模块，被注入数据库链接
	greeterUsecase := biz.NewGreeterUsecase(greeterRepo, logger)           // greeter 对象，这个对象应该是做服务层下面的一些具体工作
	greeterService := service.NewGreeterService(greeterUsecase)            // greeter 服务，被注入了 greeter 对象
	grpcServer := server.NewGRPCServer(confServer, greeterService, logger) // 生成 server 对象
	httpServer := server.NewHTTPServer(confServer, greeterService, logger)
	app := newApp(logger, grpcServer, httpServer) // 生成 app
	return app, func() {
		cleanup()
	}, nil
}
